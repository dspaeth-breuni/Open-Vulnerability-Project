package io.github.jeremylong.openvulnerability.client.nvd;

import io.github.jeremylong.openvulnerability.client.HttpAsyncClientSupplier;
import io.github.jeremylong.openvulnerability.client.PagedDataSource;

import java.time.ZonedDateTime;

public interface NvdCveClientBuilder {

    NvdCveClientBuilder withApiKey(String apiKey);

    NvdCveClientBuilder withEndpoint(String endpoint);

    NvdCveClientBuilder withDelay(long milliseconds);

    NvdCveClientBuilder withMaxRetryCount(int maxRetryCount);

    NvdCveClientBuilder withThreadCount(int count);

    NvdCveClientBuilder withMaxPageCount(int count);

    NvdCveClientBuilder withResultsPerPage(int resultsPerPage);

    NvdCveClientBuilder withFilter(String filter, String value);

    NvdCveClientBuilder withFilter(NvdCveClientBuilderNis.Filter filter, String value);

    NvdCveClientBuilder withFilter(NvdCveClientBuilderNis.BooleanFilter filter);

    NvdCveClientBuilder withLastModifiedFilter(ZonedDateTime utcStartDate, ZonedDateTime utcEndDate);

    NvdCveClientBuilder withAdditionalUserAgent(String userAgent);

    NvdCveClientBuilder withPublishedDateFilter(ZonedDateTime utcStartDate, ZonedDateTime utcEndDate);

    NvdCveClientBuilder withCvssV2SeverityFilter(NvdCveClientBuilderNis.CvssV2Severity severity);

    NvdCveClientBuilder withCvssV3SeverityFilter(NvdCveClientBuilderNis.CvssV3Severity severity);

    NvdCveClientBuilder withVirtualMatchString(String virtualMatchString);

    NvdCveClientBuilder withVersionStart(String versionStart);

    NvdCveClientBuilder withVersionStart(String versionStart, NvdCveClientBuilderNis.VersionType startType);

    NvdCveClientBuilder withVersionEnd(String versionEnd);

    NvdCveClientBuilder withVersionEnd(String versionEnd, NvdCveClientBuilderNis.VersionType endType);

    NvdCveClientBuilder withHttpClientSupplier(HttpAsyncClientSupplier httpClientSupplier);

    PagedDataSource<DefCveItem> build();
}
