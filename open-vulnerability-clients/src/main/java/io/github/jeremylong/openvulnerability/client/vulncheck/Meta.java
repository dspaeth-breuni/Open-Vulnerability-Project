package io.github.jeremylong.openvulnerability.client.vulncheck;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class Meta {

    @JsonProperty("timestamp")
    private String timestamp;

    @JsonProperty("index")
    private String index;

    @JsonProperty("limit")
    private int limit;

    @JsonProperty("total_documents")
    @JsonAlias("totalResults")
    private int totalDocuments;

    @JsonProperty("sort")
    private String sort;

    @JsonProperty("parameters")
    private List<Parameter> parameters;

    @JsonProperty("order")
    private String order;

    @JsonProperty("page")
    private int page;

    @JsonProperty("total_pages")
    private int totalPages;

    @JsonProperty("max_pages")
    private int maxPages;

    @JsonProperty("first_item")
    private int firstItem;

    @JsonProperty("last_item")
    private int lastItem;

    @JsonProperty("next_cursor")
    private String nextCursor;

    @JsonProperty("cursor")
    private String cursor;

    // Getters and Setters

    public String getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }

    public String getIndex() {
        return index;
    }

    public void setIndex(String index) {
        this.index = index;
    }

    public int getLimit() {
        return limit;
    }

    public void setLimit(int limit) {
        this.limit = limit;
    }

    public int getTotalDocuments() {
        return totalDocuments;
    }

    public void setTotalDocuments(int totalDocuments) {
        this.totalDocuments = totalDocuments;
    }

    public String getSort() {
        return sort;
    }

    public void setSort(String sort) {
        this.sort = sort;
    }

    public List<Parameter> getParameters() {
        return parameters;
    }

    public void setParameters(List<Parameter> parameters) {
        this.parameters = parameters;
    }

    public String getOrder() {
        return order;
    }

    public void setOrder(String order) {
        this.order = order;
    }

    public int getPage() {
        return page;
    }

    public void setPage(int page) {
        this.page = page;
    }

    public int getTotalPages() {
        return totalPages;
    }

    public void setTotalPages(int totalPages) {
        this.totalPages = totalPages;
    }

    public int getMaxPages() {
        return maxPages;
    }

    public void setMaxPages(int maxPages) {
        this.maxPages = maxPages;
    }

    public int getFirstItem() {
        return firstItem;
    }

    public void setFirstItem(int firstItem) {
        this.firstItem = firstItem;
    }

    public int getLastItem() {
        return lastItem;
    }

    public void setLastItem(int lastItem) {
        this.lastItem = lastItem;
    }

    public String getNextCursor() {
        return nextCursor;
    }

    public void setNextCursor(String nextCursor) {
        this.nextCursor = nextCursor;
    }

    public String getCursor() {
        return cursor;
    }

    public void setCursor(String cursor) {
        this.cursor = cursor;
    }

    @Override
    public String toString() {
        return "Meta{" +
                "timestamp='" + timestamp + '\'' +
                ", index='" + index + '\'' +
                ", limit=" + limit +
                ", totalDocuments=" + totalDocuments +
                ", sort='" + sort + '\'' +
                ", parameters=" + parameters +
                ", order='" + order + '\'' +
                ", page=" + page +
                ", totalPages=" + totalPages +
                ", maxPages=" + maxPages +
                ", firstItem=" + firstItem +
                ", lastItem=" + lastItem +
                ", cursor='" + cursor + '\'' +
                ", nextCursor='" + nextCursor + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (o == null || getClass() != o.getClass()) return false;
        Meta meta = (Meta) o;
        return limit == meta.limit && totalDocuments == meta.totalDocuments && page == meta.page && totalPages == meta.totalPages && maxPages == meta.maxPages && firstItem == meta.firstItem && lastItem == meta.lastItem && Objects.equals(timestamp, meta.timestamp) && Objects.equals(index, meta.index) && Objects.equals(sort, meta.sort) && Objects.equals(parameters, meta.parameters) && Objects.equals(order, meta.order) && Objects.equals(nextCursor, meta.nextCursor) && Objects.equals(cursor, meta.cursor);
    }

    @Override
    public int hashCode() {
        return Objects.hash(timestamp, index, limit, totalDocuments, sort, parameters, order, page, totalPages, maxPages, firstItem, lastItem, nextCursor, cursor);
    }

    // Nested Parameter Class
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonIgnoreProperties(ignoreUnknown = true)
    public static class Parameter {

        @JsonProperty("name")
        private String name;

        @JsonProperty("format")
        private String format;

        @JsonProperty("filtering")
        private String filtering;

        // Getters and Setters

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getFormat() {
            return format;
        }

        public void setFormat(String format) {
            this.format = format;
        }

        public String isFiltering() {
            return filtering;
        }

        public void setFiltering(String filtering) {
            this.filtering = filtering;
        }

        @Override
        public String toString() {
            return "Parameter{" +
                    "name='" + name + '\'' +
                    ", format='" + format + '\'' +
                    ", filtering=" + filtering +
                    '}';
        }

        @Override
        public boolean equals(Object o) {
            if (o == null || getClass() != o.getClass()) return false;
            Parameter parameter = (Parameter) o;
            return Objects.equals(name, parameter.name) && Objects.equals(format, parameter.format) && Objects.equals(filtering, parameter.filtering);
        }

        @Override
        public int hashCode() {
            return Objects.hash(name, format, filtering);
        }
    }
}